// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`better-import await import() should receive a thennable without calling .then: await import() should receive a thennable without calling .then 1`] = `
"
async ({ page }) => await import(\`../components/\${page}\`);

      ↓ ↓ ↓ ↓ ↓ ↓

import _betterImport from \\"babel-plugin-better-import/universalImport\\";

async ({
  page
}) => await _betterImport(() => import(
/* webpackChunkName: 'components/[request]' */
\`../components/\${page}\`), false);
"
`;

exports[`better-import babelServer: true: babelServer: true 1`] = `
"
import(\\"./Foo\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./Foo\\",
  file: \\"currentFile.js\\",
  path: () => _path.join(__dirname, \\"./Foo\\"),
  resolve: () => require.resolveWeak(\\"./Foo\\"),
  chunkName: () => \\"Foo\\"
});
"
`;

exports[`better-import disableWarnings: true: disableWarnings: true 1`] = `
"
import(\\"./Foo\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./Foo\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'Foo' */
  \\"./Foo\\"),
  path: () => _path.join(__dirname, \\"./Foo\\"),
  resolve: () => require.resolveWeak(\\"./Foo\\"),
  chunkName: () => \\"Foo\\"
});
"
`;

exports[`better-import dynamic import (string template + relative paths): dynamic import (string template + relative paths) 1`] = `
"
import(\`../../base/\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"../../base/\${page}\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base/[request]' */
  \`../../base/\${page}\`),
  path: () => _path.join(__dirname, \`../../base/\${page}\`),
  resolve: () => require.resolveWeak(\`../../base/\${page}\`),
  chunkName: () => \`base/\${page}\`
});
"
`;

exports[`better-import dynamic import (string template - dynamic at 1st segment): dynamic import (string template - dynamic at 1st segment) 1`] = `
"
import(\`./\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./\${page}\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: '[request]' */
  \`./\${page}\`),
  path: () => _path.join(__dirname, \`./\${page}\`),
  resolve: () => require.resolveWeak(\`./\${page}\`),
  chunkName: () => \`\${page}\`
});
"
`;

exports[`better-import dynamic import (string template with multiple nested folders): dynamic import (string template with multiple nested folders) 1`] = `
"
import(\`./base/\${page}/nested/{$another}folder\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./base/\${page}/nested/{$another}folder\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base/[request]' */
  \`./base/\${page}/nested/{$another}folder\`),
  path: () => _path.join(__dirname, \`./base/\${page}/nested/{$another}folder\`),
  resolve: () => require.resolveWeak(\`./base/\${page}/nested/{$another}folder\`),
  chunkName: () => \`base/\${page}-nested-{$another}folder\`
});
"
`;

exports[`better-import dynamic import (string template with nested folder): dynamic import (string template with nested folder) 1`] = `
"
import(\`./base/\${page}/nested/folder\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./base/\${page}/nested/folder\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base/[request]' */
  \`./base/\${page}/nested/folder\`),
  path: () => _path.join(__dirname, \`./base/\${page}/nested/folder\`),
  resolve: () => require.resolveWeak(\`./base/\${page}/nested/folder\`),
  chunkName: () => \`base/\${page}-nested-folder\`
});
"
`;

exports[`better-import dynamic import (string template): dynamic import (string template) 1`] = `
"
import(\`./base/\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./base/\${page}\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base/[request]' */
  \`./base/\${page}\`),
  path: () => _path.join(__dirname, \`./base/\${page}\`),
  resolve: () => require.resolveWeak(\`./base/\${page}\`),
  chunkName: () => \`base/\${page}\`
});
"
`;

exports[`better-import existing chunkName: existing chunkName 1`] = `
"
import(/* webpackChunkName: 'Bar' */\\"./Foo\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./Foo\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'Bar' */
  \\"./Foo\\"),
  path: () => _path.join(__dirname, \\"./Foo\\"),
  resolve: () => require.resolveWeak(\\"./Foo\\"),
  chunkName: () => \\"Bar\\"
});
"
`;

exports[`better-import static import (import as function with relative paths + nested folder): static import (import as function with relative paths + nested folder) 1`] = `
"
const obj = {component:()=>import(\`../components/nestedComponent\`)}; ()=> obj.component()

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";
const obj = {
  component: () => _betterImport({
    id: \\"../components/nestedComponent\\",
    file: \\"currentFile.js\\",
    load: () => import(
    /* webpackChunkName: 'components-nestedComponent' */
    \`../components/nestedComponent\`),
    path: () => _path.join(__dirname, \`../components/nestedComponent\`),
    resolve: () => require.resolveWeak(\`../components/nestedComponent\`),
    chunkName: () => \\"components-nestedComponent\\"
  })
};

() => obj.component();
"
`;

exports[`better-import static import (relative paths + nested folder): static import (relative paths + nested folder) 1`] = `
"
import(\`../components/nestedComponent\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"../components/nestedComponent\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'components-nestedComponent' */
  \`../components/nestedComponent\`),
  path: () => _path.join(__dirname, \`../components/nestedComponent\`),
  resolve: () => require.resolveWeak(\`../components/nestedComponent\`),
  chunkName: () => \\"components-nestedComponent\\"
});
"
`;

exports[`better-import static import (string template + relative paths): static import (string template + relative paths) 1`] = `
"
import(\`../../base\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"../../base\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base' */
  \`../../base\`),
  path: () => _path.join(__dirname, \`../../base\`),
  resolve: () => require.resolveWeak(\`../../base\`),
  chunkName: () => \`base\`
});
"
`;

exports[`better-import static import (string template): static import (string template) 1`] = `
"
import(\`./base\`)

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./base\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'base' */
  \`./base\`),
  path: () => _path.join(__dirname, \`./base\`),
  resolve: () => require.resolveWeak(\`./base\`),
  chunkName: () => \`base\`
});
"
`;

exports[`better-import static import (with file extension): static import (with file extension) 1`] = `
"
import(\\"./Foo.js\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./Foo.js\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'Foo' */
  \\"./Foo.js\\"),
  path: () => _path.join(__dirname, \\"./Foo.js\\"),
  resolve: () => require.resolveWeak(\\"./Foo.js\\"),
  chunkName: () => \\"Foo\\"
});
"
`;

exports[`better-import static import (with relative paths): static import (with relative paths) 1`] = `
"
import(\\"../../Foo\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"../../Foo\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'Foo' */
  \\"../../Foo\\"),
  path: () => _path.join(__dirname, \\"../../Foo\\"),
  resolve: () => require.resolveWeak(\\"../../Foo\\"),
  chunkName: () => \\"Foo\\"
});
"
`;

exports[`better-import static import: static import 1`] = `
"
import(\\"./Foo\\")

      ↓ ↓ ↓ ↓ ↓ ↓

import _path from \\"path\\";
import _betterImport from \\"babel-plugin-better-import/universalImport\\";

_betterImport({
  id: \\"./Foo\\",
  file: \\"currentFile.js\\",
  load: () => import(
  /* webpackChunkName: 'Foo' */
  \\"./Foo\\"),
  path: () => _path.join(__dirname, \\"./Foo\\"),
  resolve: () => require.resolveWeak(\\"./Foo\\"),
  chunkName: () => \\"Foo\\"
});
"
`;
